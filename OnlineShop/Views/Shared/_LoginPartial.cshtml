@using Microsoft.AspNetCore.Identity
@using OnlineShop.Utility
@using Microsoft.AspNetCore.Http
@using System.Net.Http
@using System.Threading.Tasks
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@{
    string userRole = null;
    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            var roles = await UserManager.GetRolesAsync(user);
            userRole = roles.FirstOrDefault();
        }
    }

    int count = 0;
    var products = HttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
    if (products == null)
    {
        products = new List<Products>();
    }
    count = products.Count();
}

<ul class="navbar-nav flex-grow-1">
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Customer" asp-controller="Home" asp-action="Index">Products</a>
    </li>
    @if (SignInManager.IsSignedIn(User))
    {
        @if (userRole == "User")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Customer" asp-controller="Home" asp-action="Cart">
                    <i class="fas fa-shopping-cart"></i>
                    (@count)
                </a>
            </li>
        }
        @if (userRole == "Super user")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Customer" asp-controller="User" asp-action="Index">Users</a>
            </li>
        }
        @if (userRole == "Admin")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="ProductTypes" asp-action="Index">Product Types</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="SpecialTag" asp-action="Index">Tag Names</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="Product" asp-action="Index">Products</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="Role" asp-action="Index">Roles</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="Role" asp-action="Assign">Assign</a>
            </li>
        }
    }
</ul>


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity?.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>